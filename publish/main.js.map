{"version":3,"sources":["app.js"],"names":["helmet","require","compression","express","path","pino","port","app","use","static","join","__dirname","get","req","res","next","e","log","error","listen","console","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,qBAAD,CAAP,EAAX;;AAEA,IAAIK,IAAI,GAAG,IAAX;AACA,IAAIC,GAAG,GAAG,IAAIJ,OAAJ,EAAV;AAEAI,GAAG,CAACC,GAAJ,CAAQN,WAAR,E,CAAsB;;AACtBK,GAAG,CAACC,GAAJ,CAAQR,MAAR,E,CAAiB;;AACjBO,GAAG,CAACC,GAAJ,CAAQH,IAAR,E,CAAe;;AAEfE,GAAG,CAACC,GAAJ,CAAQL,OAAO,CAACM,MAAR,CAAeL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAEA;;AACAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACrC,MAAI,CACF;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVH,IAAAA,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcF,CAAd;AACAD,IAAAA,IAAI,CAACC,CAAD,CAAJ;AACD;AACF,CAPD,E,CASA;;AACAT,GAAG,CAACY,MAAJ,CAAWb,IAAX,EAAiB,MAAMc,OAAO,CAACH,GAAR,CAAY,iCAAZ,EAA+CX,IAA/C,CAAvB;AACAe,MAAM,CAACC,OAAP,GAAiBf,GAAjB","file":"main.js","sourcesContent":["var helmet = require('helmet');\nvar compression = require('compression');\nvar express = require('express');\nvar path = require('path');\nvar pino = require('express-pino-logger')();\n\nvar port = 3000;\nvar app = new express();\n\napp.use(compression); // compressed responses for faster responses from the endpoints.\napp.use(helmet); // For basic protection of the server.\napp.use(pino); // For fast, detailed and color orientated output to the console.\n\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Example endpoint with basic error handling\napp.get('/', async (req, res, next) => {\n  try {\n    //Do stuff\n  } catch (e) {\n    req.log.error(e);\n    next(e);\n  }\n});\n\n// Start the server listening on the assigned port number.\napp.listen(port, () => console.log('Example app listening on port: ', port));\nmodule.exports = app;\n"]}